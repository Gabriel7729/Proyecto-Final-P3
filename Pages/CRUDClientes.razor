@page "/CRUDClientes"
@*Inject para el funcionamiento de los metodos asincronos para manejar la Base de Datos*@
@inject IClientesManager ClientesManager
@*Inject para el funcionamiento del localstorage de la variable global de la institucion*@
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager
@*Injects para el funcionamiento del Datatable*@
@inject IJSRuntime JSRuntime
@implements IDisposable

<RadzenCard>
    <div>
        <h1 class="text-center">Listado de los Clientes</h1>
        <hr />
    </div>

    <div class="row">
        <div class="col-md-6">
            <a class="btn btn-success" href='/AddClientes'><i class="fas fa-user-plus"></i>  Añadir Cliente</a>
        </div>
        <div class="col-md-6 text-right">
            <a class="btn btn-warning" href='/ListadoClientesDeshabilitados'><i class="far fa-address-book"></i> Listado de Clientes deshabilitados</a>
        </div>
    </div>
    <br />

    <table class="table table-bordered table-hover" id="example">
        <thead class="thead-dark">
            <tr>
                <th>ID</th>
                <th>Cedula</th>
                <th>Nombre</th>
                <th>Apellido</th>
                <th>Correo</th>
                <th>Licencia</th>
                <th>Nacionalidad</th>
                <th>Tipo_Sangre</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @if (ClientesModel == null)
            {
                <tr>
                    <td colspan="12">
                        No Records to display
                    </td>
                </tr>
            }
            else
            {
                foreach (var cliente in ClientesModel)
                {
                    <tr>
                        <td>@cliente.ID</td>
                        <td>@cliente.Cedula</td>
                        <td>@cliente.Nombre</td>
                        <td>@cliente.Apellido</td>
                        <td>@cliente.Correo</td>
                        <td>@cliente.Licencia</td>
                        <td>@cliente.Nacionalidad</td>
                        <td>@cliente.Tipo_Sangre</td>
                        <td>
                            <a href='/EditClientes/@cliente.ID'><i style="color:dodgerblue;" class="fas fa-pencil-alt"></i></a>
                            <a href='/DetallesClientes/@cliente.ID'><i style="color:deepskyblue;" class="fas fa-info-circle"></i></a>
                            <a href='/DeshabilitarCliente/@cliente.ID'><i style="color:orange;" class="fas fa-user-times"></i></a>
                            <a href="/CRUDClientes" @onclick="() => DeleteClientes(cliente.ID, cliente.ID_Institucion)"><i style="color:red;" class="fas fa-trash-alt"></i></a>
                        </td>
                    </tr>
                }
            }

        </tbody>
    </table>
</RadzenCard>


@code {

    //Instancia una lista de la clase de Clientes
    List<Clientes> ClientesModel;

    //Instancia de la clase Clientes
    Clientes ClientesEntity = new Clientes();

    //Metodo para borrar un Cliente con los parametros del ID normal y el ID de institucion
    protected async Task DeleteClientes(int id, string id_institucion)
    {
        await ClientesManager.Delete(id, id_institucion);
        ClientesModel = await ClientesManager.ListarClientes(id_institucion);
    }


    //Metodos para poder implementar el Datatable
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (!await localStorage.ContainKeyAsync("ID_login"))
            {
                navigationManager.NavigateTo("/Main");

            }

            String name = await localStorage.GetItemAsync<string>("ID_Institucion");
            ClientesModel = await ClientesManager.ListarClientes(name);
            StateHasChanged();
        }
        await JSRuntime.InvokeAsync<object>("TestDataTablesAdd", "#example");
    }

    void IDisposable.Dispose()
    {
        JSRuntime.InvokeAsync<object>("TestDataTablesRemove", "#example");
    }

}
