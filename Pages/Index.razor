@page "/"
@inject IArticleManager articleManager
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage

@if (administrador)
{
    <div class="overlay">
        <form id="fm" @onsubmit="() => CreateArticle()">
            <div class="con">
                <header class="head-form">
                    <h2><strong>Registrar Institucion</strong></h2>
                    <p>Ingrese los datos del usuario que desea crear</p>
                </header>
                <br>
                <div class="field-set">
                    <span class="input-item">
                        <i class="fa fa-user-circle"></i>
                    </span>
                    <input class="form-input" id="txt-input" type="text" placeholder="Nombre ID de institución" required @bind-value="@log.UserID">
                    <br>
                    <div class="form-input">
                        <span class="input-item">
                            <i class="fa fa-key"></i>
                        </span>
                        <input class="form-input" type="password" placeholder="contraseña" id="txt-inpu" name="Contraseña" required @bind-value="@log.passID">
                    </div>
                    <div class="form-input">
                        <span class="input-item">
                            <i class="far fa-building"></i>
                        </span>
                        <input class="form-input" type="text" placeholder="Nombre de la compañía" id="txt-inpu" required @bind-value="@ints.Nombre">
                    </div>

                    <br>

                    <div class="text-center">
                        @if (msj == "Registrado con exito")
                        {
                            <div class="alert alert-success text-center">@msj</div>
                        }@if (msj == "Este usuario ya existe")
                        {
                            <div class="alert alert-warning text-center">@msj</div>
                        }
                        <button class="log-in btn btn-success pt-2 btn-block mb-3"> Crear </button>

                    </div>
                </div>
            </div>
        </form>
    </div>
}
<!--Veficicador del supremo Admin-->
@if (administrador == false)
{

    <div class="overlay">
        <form id="fm">
            <div class="con">
                <header class="head-form">
                    <h2><strong>Administrador de usuarios</strong></h2>
                    <p>Ingresa tus datos de administrador para iniciar sesión</p>
                </header>
                <br>
                <div class="field-set">
                    <span class="input-item">
                        <i class="fa fa-user-circle"></i>
                    </span>
                    <input class="form-input" id="txt-input" type="text" placeholder="Usuario de Administrador" required @bind-value="@AdminUser">
                    <br>
                    <div class="form-input">
                        <span class="input-item">
                            <i class="fa fa-key"></i>
                        </span>
                        <input class="form-input" type="password" placeholder="Contraseña de administrador" id="txt-inpu" name="Contraseña" required @bind-value="@AdminClave">
                    </div>

                    <br>

                    <div class="text-center">
                        @if (error)
                        {
                            <div class="alert alert-danger">Clave o usuario incorrecto</div>
                        }
                        <button type="button" class="log-in btn btn-success pt-2 btn-block mb-3" @onclick="() => VerificarAdmin()"> Entrar </button>

                    </div>
                </div>
            </div>
        </form>
    </div>
}

@code {

    login log = new login();
    Institucion ints = new Institucion();
    String id;
    String msj;

    String AdminUser;
    String AdminClave;
    bool administrador = false;
    bool error = false;

    public void VerificarAdmin()
    {
        if (AdminUser == "admin" && AdminClave == "1234")
        {
            administrador = true;
        }
        else
        {
            error = true;
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await localStorage.SetItemAsync("name", "John Smith");
        String name = await localStorage.GetItemAsync<string>("id_login");
        msj = name;


    }

    protected async Task CreateArticle()
    {
        id = await articleManager.UserExiste(log.UserID);

        if (id == null || id == "")
        {

            int id_login = await articleManager.Createlogin(log);
            ints.ID_login = id_login.ToString();
            await articleManager.CreateInst(ints);

            msj = "Registrado con exito";
        }
        else
        {
            msj = "Este usuario ya existe";
        }

    }
}
