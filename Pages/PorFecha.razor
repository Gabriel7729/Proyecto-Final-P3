@page "/PorFecha"
@inject IVehiculosManager VehiculosManager
@inject IReservaManager ReservaManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager
@inject IJSRuntime JSRuntime
@implements IDisposable
@using Microsoft.OData.Edm;
<RadzenCard>
    <div>
        <h1 class="text-center">Filtrado por fecha</h1>
        <hr />
    </div>

    <br />
    <div class="container">
        <div class="row">
            <div class="col-md-3">
                <strong>Fecha de inicio: </strong><RadzenMask class="form-control" Mask="****/**/**" Pattern="[^0-9]" id="FIN" @bind-value="@IN" Placeholder="YYYY/MM/DD" />
                <br />
                <strong>Fecha del Final: </strong> <RadzenMask class="form-control" Mask="****/**/**" Pattern="[^0-9]" id="FFN" @bind-value="@FN" Placeholder="YYYY/MM/DD" />
            </div>
        </div>
    </div>

    @if (VehiculosModel == null)
    {

    }
    else
    {
        <div class="container">
            <div class="row" id="ads">
                @foreach (var vehiculo in VehiculosModel)
                {
                    PruebaDisponibilidad("0015/01/01", "0015/01/5", vehiculo.ID, vehiculo.ID_Institucion);

                    if (@Disponibilidad == 0)
                    {



                        <div class="col-md-4" style="padding-top:30px">
                            <div class="card rounded">
                                <div class="card-image">
                                    <span class="card-notify-badge">@vehiculo.ID @vehiculo.Marca @vehiculo.Modelo</span>
                                    <span class="card-notify-year">@vehiculo.Año</span>
                                    <img class="img-fluid" style="width:70rem;" src="@vehiculo.Foto" alt="Alternate Text" />
                                </div>
                                <br />
                                <div class="card-image-overlay m-auto">
                                    <span class="card-detail-badge">@vehiculo.Color</span>
                                    <span class="card-detail-badge">@vehiculo.Precio_Dia.ToString("C", new CultureInfo("es-DO"))</span>
                                    <span class="card-detail-badge">@vehiculo.Capacidad_Carga Kg</span>
                                    <span class="card-detail-badge">@vehiculo.Pasajeros</span>
                                </div>
                                <br />
                            </div>
                        </div>
                        <br />


                    }

                }
            </div>

        </div>
    }


</RadzenCard>


    @code {

        //Instancia una lista de la clase de vehiculos
        List<Vehiculos> VehiculosModel;

        String IN;
        String FN = "2021/01/01";

        //Instancia de la clase Vehiculos
        Vehiculos VehiculosEntity = new Vehiculos();
        int Disponibilidad;
        async Task PruebaDisponibilidad(string Fecha_inc, string Fecha_fin, int VID, string IID)
        {

            Disponibilidad = await ReservaManager.ValidadFecha(IN, FN, IID, VID.ToString());
        }

        async Task ltualizar()
        {

            String name = await localStorage.GetItemAsync<string>("ID_Institucion");
            VehiculosModel = await VehiculosManager.ListAll(name);
        }


        //Metodo para borrar un vehiculo con los parametros del ID normal y el ID de institucion
        protected async Task DeleteVehiculos(int id, string id_institucion)
        {
            await VehiculosManager.Delete(id, id_institucion);
            VehiculosModel = await VehiculosManager.ListAll(id_institucion);
        }

        protected override async Task OnAfterRenderAsync(bool firstRender)
        {
            if (firstRender)
            {
                if (!await localStorage.ContainKeyAsync("ID_login"))
                {
                    navigationManager.NavigateTo("/Main");

                }
                String name = await localStorage.GetItemAsync<string>("ID_Institucion");
                VehiculosModel = await VehiculosManager.ListAll(name);

                StateHasChanged();
            }
            await JSRuntime.InvokeAsync<object>("TestDataTablesAdd", "#example");
        }

        void IDisposable.Dispose()
        {
            JSRuntime.InvokeAsync<object>("TestDataTablesRemove", "#example");
        }

    }

    <style>
        body {
            font-family: 'Montserrat', sans-serif;
        }

        /* Category Ads */

        #ads {
            margin: 30px 0 30px 0;
        }

            #ads .card-notify-badge {
                position: absolute;
                left: -10px;
                top: -20px;
                background: #f2d900;
                text-align: center;
                border-radius: 30px 30px 30px 30px;
                color: #000;
                padding: 5px 10px;
                font-size: 14px;
            }

            #ads .card-notify-year {
                position: absolute;
                right: -10px;
                top: -20px;
                background: #ff4444;
                border-radius: 50%;
                text-align: center;
                color: #fff;
                font-size: 14px;
                width: 50px;
                height: 50px;
                padding: 15px 0 0 0;
            }


            #ads .card-detail-badge {
                background: #f2d900;
                text-align: center;
                border-radius: 30px 30px 30px 30px;
                color: #000;
                padding: 5px 10px;
                font-size: 14px;
            }



            #ads .card:hover {
                background: #fff;
                box-shadow: 12px 15px 20px 0px rgba(46,61,73,0.15);
                border-radius: 4px;
                transition: all 0.3s ease;
            }

            #ads .card-image-overlay {
                font-size: 20px;
            }


                #ads .card-image-overlay span {
                    display: inline-block;
                }


            #ads .ad-btn {
                text-transform: uppercase;
                width: 150px;
                height: 40px;
                border-radius: 80px;
                font-size: 16px;
                line-height: 35px;
                text-align: center;
                border: 3px solid #e6de08;
                display: block;
                text-decoration: none;
                margin: 20px auto 1px auto;
                color: #000;
                overflow: hidden;
                position: relative;
                background-color: #e6de08;
            }

                #ads .ad-btn:hover {
                    background-color: #e6de08;
                    color: #1e1717;
                    border: 2px solid #e6de08;
                    background: transparent;
                    transition: all 0.3s ease;
                    box-shadow: 12px 15px 20px 0px rgba(46,61,73,0.15);
                }

            #ads .ad-title h5 {
                text-transform: uppercase;
                font-size: 18px;
            }
    </style>
